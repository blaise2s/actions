name: Generate Release Notes
run-name: Generate release notes for ${{ inputs.repository }}

on:
  workflow_dispatch:
    inputs:
      repository:
        description: Repository name with owner. For example, Microsoft/Typescript.
        type: string
        required: false
        default: ${{ github.repository }}
      tagName:
        description: >
          The tag name for the release.
          This can be an existing tag or a new one.
        type: string
        required: true
      targetCommitish:
        description: >
          Specifies the commitish value that will be
          the target for the release's tag. Required
          if the supplied tag_name does not reference
          an existing tag. Ignored if the tag_name
          already exists.
        type: string
        required: true
      previousTagName:
        description: >
          The name of the previous tag to use as the
          starting point for the release notes. Use
          to manually specify the range for the set
          of changes considered as part this release.
        type: string
        required: false
        default: ''
      configurationFilePath:
        description: >
          Specifies a path to a file in the repository
          containing configuration settings used for
          generating the release notes. If unspecified,
          the configuration file located in the repository
          at '.github/release.yml' or '.github/release.yaml'
          will be used. If that is not present, the default
          configuration will be used.
        type: string
        required: false
        default: ''

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate release notes for ${{ inputs.repository }}
        id: generateReleaseNotes
        uses: ./generate-release-notes
        with:
          repository: ${{ inputs.repository }}
          tagName: ${{ inputs.tagName }}
          targetCommitish: ${{ inputs.targetCommitish }}
          previousTagName: ${{ inputs.previousTagName }}
          configurationFilePath: ${{ inputs.configurationFilePath }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Release name: ${{ steps.generateReleaseNotes.outputs.name }}'
        run: echo "${{ steps.generateReleaseNotes.outputs.name }}"

      - name: Release body...
        run: echo "${{ steps.generateReleaseNotes.outputs.body }}"
